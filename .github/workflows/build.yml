name: Build development tools

on:
  push:
    paths:
      - 'macos/*.sh'
      - 'ubuntu/*.sh'
      - 'windows/*.ps1'
      - '.github/workflows/build.yml'

jobs:
  build_artifacts:
    name: Building tools (${{ matrix.library.name }} v${{ matrix.library.version }}) on ${{ matrix.toolchain.name }}

    strategy:
      fail-fast: true

      matrix:
        toolchain:
          - { name: Linux,   os: ubuntu,  os_version: 22.04, compiler: gcc-11        }
          - { name: Windows, os: windows, os_version: 2019,  compiler: msvc-2019     }
          - { name: macOS,   os: macos,   os_version: 14,    compiler: appleclang-18 }

        library:
          - { name: googletest, version: 1.15.2 }
          - { name: zlib,       version: 1.3.1 }
          - { name: fftw,       version: 3.3.10 }
          - { name: libdeflate, version: 1.21 }
          - { name: ffmpeg,     version: 6.1 }

    runs-on: ${{ matrix.toolchain.os }}-${{ matrix.toolchain.os_version }}

    steps:
      - uses: actions/checkout@v4

      - name: Install build tools
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          vcvarsall: ${{ contains(matrix.toolchain.os, 'windows') }}
          ninja: true
          cmake: true

      - name: Install NASM (Windows)
        uses: ilammy/setup-nasm@v1.5.1
        if: ${{ contains(matrix.toolchain.os, 'windows') }}

      - name: Install base tools (Unix)
        if: ${{ !contains(matrix.toolchain.os, 'windows') }}
        run: bash ${{ matrix.toolchain.os }}/base.sh

      - name: Build ${{ matrix.library.name }} (Unix)
        if: ${{ !contains(matrix.toolchain.os, 'windows') }}
        shell: bash
        run: |
          bash ${{ matrix.toolchain.os }}/${{ matrix.library.name }}.sh "${{ matrix.library.version }}"
          mv ${{ matrix.library.name }}-install/ ${{ matrix.library.name }}/

      - name: Build ${{ matrix.library.name }} (Windows)
        if: ${{ contains(matrix.toolchain.os, 'windows') }}
        shell: powershell
        run: |
          powershell .\${{ matrix.toolchain.os }}\${{ matrix.library.name }}.ps1 "${{ matrix.library.version }}"
          mv .\${{ matrix.library.name }}-install\ .\${{ matrix.library.name }}\

      - name: Upload ${{ matrix.library.name }} as artifact archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.toolchain.os }}-${{ matrix.library.name }}-${{ matrix.library.version }}.zip
          path: ${{ matrix.library.name }}/
          compression-level: 9
          retention-days: 14
          if-no-files-found: error
